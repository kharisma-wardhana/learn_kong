##
## Kong docker-compose for fast installation
##
version: "3.9"

networks:
  kong-net:
    name: kong-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.1.0/24

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:11-alpine
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 30s
      timeout: 3s
      retries: 5

  #######################################
  # PGAdmin: Postgres Client UI
  #######################################
  kong-pgadmin:
    container_name: kong-pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    container_name: kong-migration
    image: kong:2.1.4-alpine
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:2.1.4-alpine
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.40
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DB_UPDATE_FREQUENCY: 1m
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    depends_on:
      - kong-migration
    ports:
      - "8001:8001"
      - "8444:8444"
      - "81:8000"
      - "442:8443"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://kong:password@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
      # any string will OK for token
      TOKEN_SECRET: iu7YDcPLiZkozQXzZ9kka3Ee1Vid5ZgQ
      NODE_ENV: development
    depends_on:
      - konga-prepare
    ports:
      - "1337:1337"


  #######################################
  # Distributed Tracing & Logging
  #######################################
  zipkin:
    image: openzipkin/zipkin:2.24.1
    container_name: zipkin
    restart: unless-stopped
    networks:
      - kong-net
    ports:
      - "9411:9411"

  elasticsearch:
    image: elasticsearch:7.9.2
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - discovery.type=single-node
    networks:
      - kong-net
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:7.9.2
    container_name: logstash
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./pipeline:/usr/share/logstash/pipeline/
    networks:
      - kong-net
    ports:
      - "5555:5555/udp"
      - "5044:5044"
      - "9600:9600"

  kibana:
    image: kibana:7.9.2
    container_name: kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - kong-net
    ports:
      - "5601:5601"

  #######################################
  # Monitoring & Analytics
  #######################################
  prometheus:
    image: prom/prometheus:v2.22.0
    container_name: prometheus
    restart: unless-stopped
    networks:
      - kong-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:7.2.2
    container_name: grafana
    restart: unless-stopped
    networks:
      - kong-net
    ports:
      - "3000:3000"

  #######################################
  # Demo services : user, merchant, transaction
  #######################################
  user:
    image: users-service:0.0.1
    container_name: users-service
    restart: unless-stopped
    depends_on:
      - kong-database
    environment:
      - spring.datasource.master.url=jdbc:postgresql://kong-database/learn_kong:5432?serverTimezone=Asia/Jakarta
      - logging.file.path=/var/log
      - logging.file.name=/var/log/users_service.log
    volumes:
      - ./app/log:/var/log
    networks:
      kong-net:
        ipv4_address: 172.1.1.11
    ports:
      - "9010:9010"

  merchant:
    image: merchants-service:0.0.1
    container_name: merchant-service
    restart: unless-stopped
    depends_on:
      - kong-database
    environment:
      - spring.datasource.master.url=jdbc:postgresql://kong-database/learn_kong:5432?serverTimezone=Asia/Jakarta
      - logging.file.path=/var/log
      - logging.file.name=/var/log/merchant_service.log
    volumes:
      - ./app/log:/var/log
    networks:
      kong-net:
        ipv4_address: 172.1.1.12
    ports:
      - "9020:9020"

  transaction:
    image: transactions-service:0.0.1
    container_name: transaction-service
    restart: unless-stopped
    depends_on:
      - kong-database
    environment:
      - spring.datasource.master.url=jdbc:postgresql://kong-database/learn_kong:5432?serverTimezone=Asia/Jakarta
      - logging.file.path=/var/log
      - logging.file.name=/var/log/transactions_service.log
    volumes:
      - ./app/log:/var/log
    networks:
      kong-net:
        ipv4_address: 172.1.1.13
    ports:
      - "9030:9030"